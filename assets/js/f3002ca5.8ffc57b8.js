"use strict";(self.webpackChunkevantay_com=self.webpackChunkevantay_com||[]).push([[5513],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3069:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={title:"Dependency management"},u=void 0,s={unversionedId:"ruby-dependency-management",id:"ruby-dependency-management",title:"Dependency management",description:"Published on October 24, 2021",source:"@site/docs/ruby-dependency-management.md",sourceDirName:".",slug:"/ruby-dependency-management",permalink:"/docs/ruby-dependency-management",draft:!1,tags:[],version:"current",frontMatter:{title:"Dependency management"},sidebar:"docs",previous:{title:"Network Model (CS4226)",permalink:"/docs/network-model"},next:{title:"C Cheatsheet",permalink:"/docs/c-cheatsheet"}},c={},p=[{value:"Why do we use bundler?",id:"why-do-we-use-bundler",level:2},{value:"Resources",id:"resources",level:2}],d={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Published on October 24, 2021"),(0,o.kt)("h2",{id:"why-do-we-use-bundler"},"Why do we use bundler?"),(0,o.kt)("p",null,"Why do we use ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle install")," rather than ",(0,o.kt)("inlineCode",{parentName:"p"},"gem install"),"?"),(0,o.kt)("p",null,"Bundler installs the exact gems and versions that are needed. It resolves all dependency conflicts for you automatically, which you would have to manually resolve if you had used ",(0,o.kt)("inlineCode",{parentName:"p"},"gem install")," instead."),(0,o.kt)("p",null,"For example, if you have two gems requiring different versions of the same gem ",(0,o.kt)("inlineCode",{parentName:"p"},"nokogiri"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Gemfile"},"sunspot_rails\n  nokogiri (>= 1.2.0)\n\nwebrat\n  nokogiri (>= 1.3) \n")),(0,o.kt)("p",null,"If you use ",(0,o.kt)("inlineCode",{parentName:"p"},"gem install")," to install ",(0,o.kt)("inlineCode",{parentName:"p"},"sunspot_rails")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"webrat"),", it might install both ",(0,o.kt)("inlineCode",{parentName:"p"},"1.2.0")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"1.3.0")," nokogiri versions or even complain about version conflicts. If you use ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle install")," instead, Bundler will resolve this dependency conflict by installing the right ",(0,o.kt)("inlineCode",{parentName:"p"},"nokogiri")," version, which is ",(0,o.kt)("inlineCode",{parentName:"p"},"1.3")," in this example."),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://bundler.io/"},"bundler.io")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/7273853/why-bundle-install-a-gem-instead-of-gem-install-for-a-rails-3-app"},'Why "bundle install" a gem instead of "gem install" for a rails 3 app?'))))}m.isMDXComponent=!0}}]);